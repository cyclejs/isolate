(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.CycleIsolate=f()}})(function(){var define,module,exports;return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module,exports){"use strict";var counter=0;function newScope(){return"cycle"+ ++counter}function checkIsolateArgs(dataflowComponent,scope){if(typeof dataflowComponent!=="function"){throw new Error("First argument given to isolate() must be a "+"'dataflowComponent' function")}if(typeof scope!=="string"){throw new Error("Second argument given to isolate() must be a "+"string for 'scope'")}}function isolateAllSources(sources,scope){var scopedSources={};for(var key in sources){if(sources.hasOwnProperty(key)&&sources[key]&&typeof sources[key].isolateSource==="function"){scopedSources[key]=sources[key].isolateSource(sources[key],scope)}else if(sources.hasOwnProperty(key)){scopedSources[key]=sources[key]}}return scopedSources}function isolateAllSinks(sources,sinks,scope){var scopedSinks={};for(var key in sinks){if(sinks.hasOwnProperty(key)&&sources[key]&&typeof sources[key].isolateSink==="function"){scopedSinks[key]=sources[key].isolateSink(sinks[key],scope)}else if(sinks.hasOwnProperty(key)){scopedSinks[key]=sinks[key]}}return scopedSinks}function isolate(component,scope){if(scope===void 0){scope=newScope()}checkIsolateArgs(component,scope);return function scopedComponent(sources){var rest=[];for(var _i=1;_i<arguments.length;_i++){rest[_i-1]=arguments[_i]}var scopedSources=isolateAllSources(sources,scope);var sinks=component.apply(void 0,[scopedSources].concat(rest));var scopedSinks=isolateAllSinks(sources,sinks,scope);return scopedSinks}}isolate.reset=function(){return counter=0};Object.defineProperty(exports,"__esModule",{value:true});exports.default=isolate},{}]},{},[1])(1)});